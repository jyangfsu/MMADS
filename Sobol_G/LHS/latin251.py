# -*- coding: utf-8 -*-
"""
Created on Tue May 19 16:19:35 2020

@author: Jing
"""
import os 
import numpy as np
import pandas as pd 
   
def lhs(problem, nobs, seed=933090934):
    """
    Generate a latin-hypercube design using the LHS251.exe
    
    Returns a NumPy matrix containing the model inputs generated by Latin
    hypercube sampling.  The resulting matrix contains nobs rows and D columns,
    where D is the number of parameters.
    
    Parameters
    ----------
    problem : dict
        The descritpion of the problem. 
    nobs : int
        The number of factors to generate samples for     
  
    Optional
    --------
    seed : int
        The random seed for reproducing the results
    
    Returns
    -------
    H : 2d-array
        An nobs-by-D design matrix
     
    """
    
    lhs251 = 'lhs251.exe'
    if seed:
        np.random.seed(seed)
    
    try:
        os.remove('LHS2_DBG$OUTPUT')
        os.remove('LHS2_OUT$OUTPUT')
        os.remove('Rand.inp')
    except:
        pass
    
    with open('Rand.inp', 'w') as fobj:
        fobj.write('TITLE SDB Name = LHS251         , Ver = 2.51         07/12/00\n')
        fobj.write('TITLE LHS design for SA Project\n')
        fobj.write('NOBS                %d\n' %nobs)
        fobj.write('RANDOM SEED       %d\n' %seed)
        for i in range(problem['nvars']):
            fobj.write('%s                  %s  %s\n' %(problem['dists'][i], problem['names'][i], problem['names'][i]))
            fobj.write('   %f           %f\n' %(problem['bounds'][i][0], problem['bounds'][i][1]))
        fobj.write('OUTPUT CORR HIST DATA\n')
        fobj.write('TITLE SDB Name = LHS251         , Ver = 2.51         07/12/00\n')
        
    os.system(lhs251)
    H = pd.read_table('LHS2_DBG$OUTPUT', header=None, sep='\s+').values.reshape([nobs, -1])[:, 2:problem['nvars'] + 2]
    
    try:
        os.remove('LHS2_DBG$OUTPUT')
        os.remove('LHS2_OUT$OUTPUT')
        os.remove('Rand.inp')
    except:
        pass
   
    return H

if __name__ == '__main__': 
    lhs_inp = {'nvars': 4,
               'names':['PerLN' ,'PorNO', 'Mult', 'Length'],
               'bounds': [[-3.7085, 3.4999], [0.07898, 10.5010], [10, 100], [3.5593, 5.2048]],
               'dists': ['NORMAL', 'NORMAL', 'UNIFORM', 'NORMAL']
               }
    
    H = lhs(lhs_inp, nobs=500)